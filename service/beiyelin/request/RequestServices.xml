<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="create" noun="ServiceRequest">
        <in-parameters>
            <auto-parameters entity-name="mantle.request.Request" include="nonpk"><exclude field-name="visitId"/></auto-parameters>
            <parameter name="ownerPartyId" required="true"/>
            <parameter name="serviceLocationPartyId" required="true"/>
            <parameter name="draftStatus"/>
            <parameter name="submittedStatus"/>
            <parameter name="priority" type="Long" default="5"/>
            <parameter name="requestTypeEnumId" default-value="RqtService"/>
            <parameter name="requestResolutionEnumId" default-value="RrUnresolved"/>
            <parameter name="requestDate" default="ec.user.nowTimestamp"/>
            <parameter name="filedByPartyId" default="ec.user.userAccount?.partyId"/>
            <parameter name="reporterPartyId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="requestId"/>
        </out-parameters>
        <actions>

            <set field="visitId" from="ec.user.visitId"/>
            <if condition="draftStatus"><set field="statusId" value="ReqDraft"/> </if>
            <if condition="submittedStatus"><set field="statusId" value="ReqSubmitted"/> </if>
            <service-call name="create#mantle.request.Request" out-map="context" in-map="context"/>
            <if condition="reporterPartyId">
                <service-call name="create#mantle.request.RequestParty"
                              in-map="[requestId:requestId, partyId:reporterPartyId, roleTypeId:'Reporter', fromDate:ec.user.nowTimestamp]"/>
            </if>
        </actions>
    </service>
    
    <service verb="create" noun="ServiceRequestProcess">
        <description>启动服务申请流程，1、创建Request，2、启动Process</description>
        <in-parameters>
            <auto-parameters entity-name="mantle.request.Request" include="nonpk"><exclude field-name="visitId"/></auto-parameters>
            <parameter name="ownerPartyId" required="true"/>
            <parameter name="serviceLocationPartyId" required="true"/>
<!--            <parameter name="draftStatus"/>-->
<!--            <parameter name="submittedStatus"/>-->
            <parameter name="priority" type="Long" default="5"/>
            <parameter name="requestTypeEnumId" default-value="RqtService"/>
            <parameter name="requestResolutionEnumId" default-value="RrUnresolved"/>
            <parameter name="requestDate" default="ec.user.nowTimestamp"/>
            <parameter name="filedByPartyId" default="ec.user.userAccount?.partyId"/>
            <parameter name="reporterPartyId"/>

        </in-parameters>
        <out-parameters>
            <parameter name="requestId"/>
            <parameter name="processInstanceId"/>
        </out-parameters>
        <actions>
            <set field="draftStatus" value="draftStatus"/>
            <service-call name="beiyelin.request.RequestServices.create#ServiceRequest" out-map="context" in-map="context"/>
            <set field="entityName" value="Request"/>
            <set field="businessType" value="RqtService"/>
            
            <entity-find-one entity-name="mantle.workflow.EntityToWorkflow" value-field="entityToWorkflow">
                <field-map field-name="entityName"/>
                <field-map field-name="businessType"/>
            </entity-find-one>

            <service-call name="moqui.workflow.WorkflowServices.create#ProcessInstanceByEntity"
                          in-map="[entityToWorkflowId: entityToWorkflow.entityToWorkflowId, masterEntityId: requestId]"/>

        </actions>
    </service>

    <service verb="get" noun="RequestDisplayInfo">
        <in-parameters>
            <parameter name="requestId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="requestId"/>
            <parameter name="request" type="Map"><auto-parameters entity-name="mantle.request.Request"/> </parameter>
            <parameter name="statusItem" type="Map"><auto-parameters entity-name="moqui.basic.StatusItem"/></parameter>
            <parameter name="editableStatusIds" type="Set"><parameter name="statusId"/></parameter>
            <parameter name="requestEditable" type="Boolean"/>
<!--            <parameter name="placeWarnings" type="List"><parameter name="placeWarning"/></parameter>-->

            <parameter name="requestTypeEnum" type="Map">
                <auto-parameters entity-name="moqui.basic.Enumeration"/></parameter>
            <parameter name="requestCategoryDetail" type="Map">
                <auto-parameters entity-name="mantle.request.RequestCategory"/></parameter>
            <parameter name="requestResolutionEnum" type="Map">
                <auto-parameters entity-name="moqui.basic.Enumeration"/></parameter>
            <parameter name="facilityDetail" type="Map"><auto-parameters entity-name="mantle.facility.Facility"/></parameter>
            <parameter name="filedByPartyDetail" type="Map"><auto-parameters entity-name="mantle.party.PartyDetail"/></parameter>
            <parameter name="ownerPartyDetail" type="Map"><auto-parameters entity-name="mantle.party.PartyDetail"/></parameter>
            <parameter name="serviceLocationPartyDetail" type="Map"><auto-parameters entity-name="mantle.party.PartyDetail"/></parameter>
            <parameter name="productDetail" type="Map"><auto-parameters entity-name="mantle.product.Product"/></parameter>
            <parameter name="assetDetail" type="Map"><auto-parameters entity-name="mantle.product.asset.Asset"/></parameter>
            <parameter name="requestChannelEnum" type="Map">
                <auto-parameters entity-name="moqui.basic.Enumeration"/></parameter>
            <parameter name="filedByPartyDetail" type="Map"><auto-parameters entity-name="mantle.party.PartyDetail"/></parameter>
        </out-parameters>
        <actions>
<!--            <set field="placeWarnings" from="[]"/>-->

            <entity-find-one entity-name="mantle.request.Request" value-field="request"/>
            <if condition="request == null"><return error="true" message="Request not found with ID ${requestId}"/></if>
            <set field="statusItem" from="request.status"/>

            <set field="editableStatusIds" from="new HashSet(['ReqDraft', 'ReqSubmitted'])"/>
            <set field="requestEditable" from="editableStatusIds.contains(request.statusId)"/>
            <set field="requestTypeEnum" from="request.type"/>
            <set field="requestCategoryDetail" from="request.category"/>
            <set field="requestResolutionEnum" from="request.resolution"/>
            <set field="facilityDetail" from="request.facility"/>
<!--            <set field="filedByPartyDetail" from="request.filedBy"/>-->
            <entity-find-one entity-name="mantle.party.PartyDetail" value-field="filedByPartyDetail">
                <field-map field-name="partyId" from="request.filedByPartyId"/>
            </entity-find-one>

            <if condition="request.ownerPartyId">
                <entity-find-one entity-name="mantle.party.PartyDetail" value-field="ownerPartyDetail">
                    <field-map field-name="partyId" from="request.ownerPartyId"/>
                </entity-find-one>

            </if>

<!--            <set field="serviceLocationPartyDetail" from="request.serviceLocation"/>-->
            <if condition="request.serviceLocationPartyId">
                <entity-find-one entity-name="mantle.party.PartyDetail" value-field="serviceLocationPartyDetail">
                    <field-map field-name="partyId" from="request.serviceLocationPartyId"/>
                </entity-find-one>
            </if>

            <set field="productDetail" from="request.product"/>
            <set field="assetDetail" from="request.asset"/>
            <set field="requestChannelEnum" from="request.requestChannel" />

        </actions> 
    </service>

    <!--
    一个服务请求可以生成多张工单
    工单生成逻辑：
    1、根据RequestParty中ownerPartyId为 Service Demand Side
    2、根据ownerPartyId和serviceLocationPartyId，找到当前有效的服务协议agreement，如果没有找到，
        则提示没有找到有效的协议。如果找到多条，缺省选择第一条，排序条件为最后签署的，在工单界面可以继续调整
    3、字段对应写入：

        facilityId =》 facilityId
        requestName =》 workEffortName
        description =》 description
        priority =》 priority

        requestDate =》 新增requestDate(不新增，保留在Request中）
        responseRequiredDate =》 estimatedCompletionDate？？？还是新增(不新增，保留在Request中）

         'WetTicket'  =》 workEffortTypeEnumId
         'WevWorkGroup' =》 visibilityEnumId
          服务协议  =》 新增agreementId
          服务协议SLA       =》 需要新增一张表来记录SLA的要求,SLA计算比较复杂，不是在生成Ticket时生成，需要在审核时生成
          服务协议的需求方  =》 ownerPartyId

    4、 workeffortParty
        在生成工单的时候还不知道服务方是谁，等工单确认的时候就可以根据服务协议确定服务方
        c、 roleTypeId = Reporter
            partyId
            fromDate
            thruDate
            statusId =>WeptOffered

         d、roleTypeId = Receiver
            partyId
            fromDate
            thruDate
            statusId =>WeptOffered

   -->
    <service verb="generate" noun="TicketFromRequest">
        <in-parameters>
            <parameter name="requestId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="workEffortId" required="true"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.request.Request" value-field="request"/>
            <if condition="request == null"><return error="true" message="Request not found with ID ${requestId}"/></if>

            <!--            记录requestDate，取最后一次达到ReqSubmitted状态的发生时间-->
            <entity-find entity-name="moqui.entity.EntityAuditLog"  list="statusList">
                <econdition field-name="changedEntityName" value="mantle.request.Request"/>
                <econdition field-name="changedFieldName" value="statusId"/>
                <econdition field-name="newValueText" value="ReqSubmitted"/>
                <econdition field-name="pkPrimaryValue" from="requestId"/>
                <order-by field-name="-lastUpdatedStamp"/>
            </entity-find>
            <if condition="statusList">
                <set field="requestDate" from="statusList[0].changedDate"/>
            </if>
            <if condition="!requestDate">
                <return error="true" message="Request(ID ${requestId} not found Submitted status"/>
            </if>

            <set field="workEffortTypeEnumId" value="WetTicket"/>
            <set field="visibilityEnumId" value="WevWorkGroup"/>
            <set field="statusId" value="WeInPlanning"/>
            <set field="statusFlowId" value="ServiceTicket"/>
            <service-call name="create#mantle.work.effort.WorkEffort" in-map="[
                workEffortTypeEnumId:workEffortTypeEnumId, visibilityEnumId:visibilityEnumId,
                ownerPartyId:request.ownerPartyId, serviceLocationPartyId:request.serviceLocationPartyId,
                productId:request.productId, assetId:request.assetId,
                statusId:statusId, statusFlowId:statusFlowId,
                priority:request.priority, workEffortName: request.requestName,
                description:request.description, facilityId: request.facilityId,requestDate:requestDate
                    ]" out-map="context"/>
            <service-call name="create#mantle.request.RequestWorkEffort" in-map="[
                requestId:requestId,workEffortId:workEffortId
                ]"/>


            
            <entity-find-one entity-name="mantle.request.RequestParty" value-field="reporterParty">
                <field-map field-name="requestId"/>
                <field-map field-name="roleTypeId" value="Reporter"/>
            </entity-find-one>
            <if condition="reporterParty">
                <service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[
                    workEffortId: workEffortId, partyId: reporterParty.partyId,
                    roleTypeId: reporterParty.roleTypeId, fromDate: reporterParty.fromDate, thruDate:reporterParty.thruDate,
                    statusId: 'WeptOffered'
                ]"/>
            </if>
            <service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[
                    workEffortId: workEffortId, partyId: ec.user.userAccount?.partyId,
                    roleTypeId: 'Receiver', fromDate: ec.user.nowTimestamp,
                    statusId: 'WeptOffered'
                ]"/>

        </actions>


    </service>



</services>
